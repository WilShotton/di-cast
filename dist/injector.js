!function(a){"use strict";function b(){function a(a,b){return-1!==Object.prototype.toString.call(a).split(" ")[1].toLowerCase().indexOf(b.toLowerCase())}function b(b,c,d){if(!a(b,c))throw new TypeError(d)}function c(a,b){this.name="InjectionError",this.message=a.message,this.info=a.info.replace(/\{\{(\w+)\}\}/g,function(a,c){return b[c]})}function d(){function d(a){if(b(a,"string",g),u.hasMappingFor(a))throw new c(i,{key:a})}function o(a,b){b.forEach(function(b){if(null==a[b.name])throw new c(l,b);if(b.hasOwnProperty("arity")&&a[b.name].length!==b.arity)throw new c(m,b)})}function p(a,b){if(!b.hasOwnProperty("props")){b.props=[];for(var c in a)0===c.indexOf("i_")&&(b.props[b.props.length]=c)}return b.props}function q(b){var c=new b.Builder(n.call(arguments,1));return o(c,b.api),p(c,b).forEach(function(a){null==c[a]&&(c[a]=u.getMappingFor(a.replace("i_","")))}),a(c.postConstruct,"Function")&&c.postConstruct(u),c}function r(a){function b(){return a.Factory=a.target.apply(a.target,a.args.map(function(a){return u.getMappingFor(a)})),a.Builder=function(b){return a.Factory.apply(this,b)},a.Builder.prototype=a.Factory.prototype,a.instance={make:function(){return q.apply(this,[a].concat(n.call(arguments,0)))}},a.instance}return a.instance||b()}function s(a){return a.hasOwnProperty("Builder")||(a.Builder=function(){return a.target.apply(this,a.args.map(function(a){return u.getMappingFor(a)}))},a.Builder.prototype=a.target.prototype),a.isSingleton&&!a.hasOwnProperty("instance")&&(a.instance=q(a)),a.instance||q(a)}function t(a){if(!a.processed){a.processed=!0,o(a.target,a.api),a.props=[];for(var b in a.target)0===b.indexOf("i_")&&null==a.target[b]&&(a.props[a.props.length]=b,a.target[b]=u.getMappingFor(b.replace("i_","")))}return a.target}var u=this,v={injector:{target:u,resolver:t,api:[]}};this.map=function(a){return d(a),{toFactory:function(c){return b(c,"Object",f),b(c.target,"Function",e),v[a]={resolver:r,target:c.target,api:c.api||[],args:c.using||[]},u},toType:function(c){return b(c,"Object",f),b(c.target,"Function",e),v[a]={resolver:s,target:c.target,api:c.api||[],args:c.using||[],isSingleton:c.isSingleton||!1},u},toValue:function(d){if(b(d,"Object",f),!d.hasOwnProperty("target"))throw new c(h,{key:a});return v[a]={resolver:t,target:d.target,api:d.api||[]},u}}},this.hasMappingFor=function(a){return b(a,"String",g),v.hasOwnProperty(a)},this.getMappingFor=function(a){if(!u.hasMappingFor(a))throw new c(j,{key:a});return v[a].resolver(v[a])},this.unMap=function(a){var b=null;return u.hasMappingFor(a)&&(Object.keys(v).filter(function(b){return b!==a}).map(function(a){return v[a]}).forEach(function(b){if(b.hasOwnProperty("args")&&-1!==b.args.indexOf(a))throw new c(k,{key:a});if(b.hasOwnProperty("props")||b.resolver(b).hasOwnProperty("make")&&b.instance.make(),-1!==b.props.indexOf("i_"+a))throw new c(k,{key:a})}),b=v[a].target,delete v[a]),b},this.resolveFactory=function(a){return b(a,"Function",e),r({target:a,args:n.call(arguments,1),api:[]})},this.resolveType=function(a){return b(a,"Function",e),s({target:a,args:n.call(arguments,1),isSingleton:!1,api:[]})},this.resolveValue=function(a){return b(a,"Object",e),t({target:a,api:[]})}}var e="The target must be an Object or Function",f="Incorrect method signature supplied",g="The key must be a String",h={message:"The target must be specified",info:"The mapping for {{key}} must have a target property"},i={message:"A mapping already exists",info:"The mapping {{key}} is already in use"},j={message:"No mapping found",info:"No mapping for {{key}} found"},k={message:"The mapping has dependants",info:"{{key}} could not be unMapped as other mapping depend on it"},l={message:"The mapping is missing a required member",info:"The mapping must have a member called {{name}}"},m={message:"The mapping has an interface method with an incorrect arity",info:"The method signature for {{name}} requires {{arity}} arguments"},n=Array.prototype.slice;return c.prototype=new Error,c.prototype.constructor=c,d}var c=[];"function"==typeof define&&define.amd?define(c,b):"undefined"!=typeof module&&module.exports?module.exports=b.apply(b,c.map(function(a){return require(a)})):a.Injector=b.apply(b,c.map(function(b){return a[b]}))}(this);